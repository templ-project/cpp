name: CI Release

on:
  workflow_call:
    inputs:
      version_tag:
        description: 'Version tag for the release (e.g., v1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.version_tag }}
        fetch-depth: 0

    - name: Read changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          echo "Using generated CHANGELOG.md from bumpalicious"
        else
          echo "CHANGELOG.md not found, will use tag as body"
          echo "Release ${{ inputs.version_tag }}" > CHANGELOG.md
        fi

    - name: Create source archive
      run: |
        mkdir -p release-assets

        # Create source tarball (excluding build artifacts and git)
        tar --exclude='.git' \
            --exclude='build' \
            --exclude='.xmake' \
            --exclude='node_modules' \
            --exclude='.venv' \
            --exclude='__pycache__' \
            -czf release-assets/cpp-template-${{ inputs.version_tag }}-source.tar.gz \
            .

        echo "Source archive created"
        ls -lah release-assets/

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Package binary artifacts
      run: |
        mkdir -p release-assets

        # Package each platform's binaries
        cd artifacts
        for dir in cpp-template-*/; do
          if [ -d "$dir" ]; then
            PLATFORM_NAME=$(echo "${dir%/}" | sed 's/cpp-template-//')
            tar -czf "../release-assets/cpp-template-${{ inputs.version_tag }}-${PLATFORM_NAME}.tar.gz" -C "$dir" .
            echo "Packaged $PLATFORM_NAME"
          fi
        done
        cd ..

        echo "All release assets:"
        ls -lah release-assets/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.version_tag }}
        name: Release ${{ inputs.version_tag }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ inputs.prerelease }}
        files: release-assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
