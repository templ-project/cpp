name: CI Release

on:
  workflow_call:
    inputs:
      version_tag:
        description: 'Version tag for the release (e.g., v1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

        if [ -z "$PREV_TAG" ]; then
          # First release, get all commits
          COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          # Get commits since previous tag
          COMMITS=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi

        # Create changelog
        echo "## What's Changed" > CHANGELOG.txt
        echo "" >> CHANGELOG.txt
        echo "$COMMITS" >> CHANGELOG.txt

        cat CHANGELOG.txt

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release-assets

        # Package artifacts by platform
        cd artifacts
        for dir in */; do
          if [ -d "$dir" ]; then
            tar -czf "../release-assets/${dir%/}.tar.gz" -C "$dir" .
          fi
        done
        cd ..

        ls -lah release-assets/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.version_tag }}
        name: Release ${{ inputs.version_tag }}
        body_path: CHANGELOG.txt
        draft: false
        prerelease: ${{ inputs.prerelease }}
        files: |
          release-assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ inputs.version_tag }}
        path: release-assets/
