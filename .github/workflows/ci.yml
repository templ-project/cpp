name: C++ CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # # Validation pipeline (format, lint, duplicate-check, test)
  # validate:
  #   name: Validate Code
  #   uses: ./.github/workflows/ci.validate.yml
  #   with:
  #     os: ubuntu-latest

  # Build matrix for different platforms and configurations
  build-linux-release:
    name: Build Linux Release
    # needs: validate
    uses: ./.github/workflows/ci.build.yml
    with:
      os: ubuntu-latest

  build-macos-release:
    name: Build macOS Release
    # needs: validate
    uses: ./.github/workflows/ci.build.yml
    with:
      os: macos-latest

  build-windows-release:
    name: Build Windows Release
    # needs: validate
    uses: ./.github/workflows/ci.build.yml
    with:
      os: windows-latest

  # # Version bump (only on main branch push or manual trigger)
  # version:
  #   name: Bump Version
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event.inputs.perform_release == 'true'
  #   needs: [build-linux-release, build-linux-debug, build-macos-release, build-macos-debug, build-windows-release, build-windows-debug]
  #   uses: ./.github/workflows/ci.version.yml
  #   with:
  #     version_type: ${{ github.event.inputs.version_type || 'patch' }}

  # # Release (only on main branch push or manual trigger)
  # release:
  #   name: Create Release
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event.inputs.perform_release == 'true'
  #   needs: version
  #   uses: ./.github/workflows/ci.release.yml
  #   with:
  #     version_tag: ${{ needs.version.outputs.version_tag }}
  #     prerelease: false
  #   permissions:
  #     contents: write
